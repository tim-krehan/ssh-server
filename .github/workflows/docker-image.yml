name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for tagging commits
      packages: write
      id-token: write # Required for GitHub Container Registry authentication

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Get the current date for date-based versioning
        run: |
          DATE_VERSION=$(date +'%Y.%m')
          echo "DATE_VERSION=${DATE_VERSION}" >> $GITHUB_ENV

      - name: Check the count of released tags in the current month
        run: |
          git fetch --tags
          TAG_COUNT=$(git tag --list "${{ env.DATE_VERSION }}.*" | wc -l)
          TAG_COUNT=$((TAG_COUNT + 1))
          NEW_VERSION=${DATE_VERSION}.${TAG_COUNT}
          echo "NEW_VERSION=${NEW_VERSION}"
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Tag the current commit
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a "${{ env.NEW_VERSION }}" -m "Release ${{ env.NEW_VERSION }}"
          git push origin "${{ env.NEW_VERSION }}"

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: tim-krehan
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build . \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.NEW_VERSION }}

      - name: Push Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.NEW_VERSION }}
